@page
@model BrennanHunterPortfolio.Pages.Blogs.GithubSecretsModel
@{
}
<div style="margin-left: 15%; margin-right: 15%;">
    <h1 class="my-5">Using Github Secrets to Securely Hide Connection Strings </h1>
    <div>
        <h3>Requirements:</h3>
        <ul>
            <li>Github Repository</li>
            <li><a href="/Blogs/CICD">Github Actions Workflow</a></li>
        </ul>
        <h3>Introduction: </h3>
        <p>
            Open-source software is becoming bigger and bigger, which in my opinion, is awesome! However, sharing all 
            of your code makes it that much easier for people to find vulnerabilities in your code and finding ways 
            to exploit them. One of the easiest things for a hacker to do is to find a connection string or some other 
            value that should be secret and then using that to do nefarious things.
        </p>
        <p>
            In this blog, I will show you how to easily hide your connection strings or any other secret string from 
            prying eyes.  
        </p>
        <h3>Adding a Github Secret:</h3>
        <p>
            First, navigate to your github repository where you wish to add a secret. Then, navigate to the settings 
            page of that repository. Scroll down on the tab on the left until you find the Secrets Tab. Click the 
            drop-down arrow and select Actions. There you will find a button to create a new repository secret 
        </p>
        <div class="text-center py-3 w-100">
            <img src="~/images/GitHub/NewSecret.jpg" alt="new github secret" style="width: inherit;">
        </div>
        <h3>Add Secret to Repository: </h3>
        <p>
            Next thing to do is to go to your workflow yaml file and add a step to add the github secret to an 
            environment file. Here is what that might look like: 
        </p>
        <div class="text-center py-3">
            <img src="~/images/GitHub/yaml.jpg" alt="adding secret to yaml file" style="width: inherit;">
        </div>
        <h3>Grab the Secret from Environment File:</h3>
        <p>
            When you run the workflow, the secret should populate to your repository! The last thing to do is to access 
            the secret and put it in the correct place in your application. For me, using .NET it looks something like 
            this: “var connectionString= Environment.GetEnvironmentVariable("demoString");” 
        </p>
    </div>
</div>